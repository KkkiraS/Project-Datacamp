{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Распределение хи-квадрат\n",
    "Постройте график функции плотности распределения хи-квадрат с 12 степенями свободы."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import scipy.stats\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "x = np.arange(0, 30, .05)\n",
    "plt.plot(stats.chi2.pdf(x, df=12), color='r', lw=2)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Распределение Стьюдента\n",
    "Сгенерируйте случайную выборку из 10^6 элементов для распределения Стьюдента с 3 степенями свободы. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-0.66882436, -0.47601766, -0.37756859, ...,  1.93104047,\n",
       "        0.12543346,  0.06197824])"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import scipy.stats\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "scipy.stats.t.rvs(df=3, size = 10**6)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Распределение Фишера\n",
    "Сгенерируйте случайную выборку из 10^4 элементов для распределения Фишера с k1=3 и k2=5 степенями свободы. Постройте гистограмму данной выборки. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import scipy.stats\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "scipy.stats.f.rvs(dfn=3, dfd=5, size = 10**4)\n",
    "\n",
    "plt.hist(f, 60, density=True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
